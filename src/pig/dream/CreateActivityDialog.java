package pig.dream;

import com.intellij.openapi.editor.Document;
import com.intellij.openapi.fileTypes.StdFileTypes;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.psi.*;
import com.intellij.ui.EditorTextField;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import javax.swing.*;
import java.awt.*;

/**
 * Created by zhukun on 2017/3/28.
 */
public class CreateActivityDialog extends DialogWrapper {

    private final JavaCodeFragmentFactory javaCodeFragmentFactory;
    private final PsiPackage psiPackage;
    private final PsiDocumentManager psiDocumentManager;
    private final Project project;

    private JPanel myPanel;
    private JPanel activityClassNameFieldPlaceholder;
    private JLabel activityNameLabel;
    private EditorTextField activityClassNameField;

    protected CreateActivityDialog(@Nullable Project project, @NotNull PsiDirectory defaultDirectory) {
        super(project);
        this.project = project;
        this.javaCodeFragmentFactory = JavaCodeFragmentFactory.getInstance(project);
        this.psiPackage = JavaPsiFacade.getInstance(project).findPackage(JavaDirectoryService.getInstance().getPackage(defaultDirectory).getQualifiedName());
        this.psiDocumentManager = PsiDocumentManager.getInstance(project);

        setTitle("Create Activity");

    }

    @Override
    protected void init() {
        super.init();

        // init jpanel
//        activityClassNameField = initAutoCompleteEditorTextField("", "The class name ,if any.");
//        activityClassNameFieldPlaceholder.add(activityClassNameField);
//        activityNameLabel.setLabelFor(activityClassNameField);
    }

    @Nullable
    @Override
    protected JComponent createCenterPanel() {
        return this.myPanel;
    }

    private EditorTextField initAutoCompleteEditorTextField(@NotNull String defaultText, @NotNull String tooltip) {
        JavaCodeFragment javaCodeFragment = javaCodeFragmentFactory.createReferenceCodeFragment(defaultText, psiPackage, true, true);
        javaCodeFragment.setVisibilityChecker(JavaCodeFragment.VisibilityChecker.EVERYTHING_VISIBLE);
        Document doc = psiDocumentManager.getDocument(javaCodeFragment);
        EditorTextField editorTextField = new EditorTextField(doc, project, StdFileTypes.JAVA);
        editorTextField.setToolTipText(tooltip);
        return editorTextField;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        myPanel = new JPanel();
        myPanel.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), -1, -1));
        myPanel.setEnabled(true);
        myPanel.putClientProperty("html.disable", Boolean.FALSE);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        myPanel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.setBorder(BorderFactory.createTitledBorder("Activity"));
        activityNameLabel = new JLabel();
        activityNameLabel.setText("Name");
        panel1.add(activityNameLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        activityClassNameFieldPlaceholder = new JPanel();
        activityClassNameFieldPlaceholder.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(activityClassNameFieldPlaceholder, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        myPanel.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return myPanel;
    }
}
